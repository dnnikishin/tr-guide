version: "3"
services:

  postgres:
    image: postgres:11
    container_name: travel-db-postgres
    restart: always
    env_file:
      - postgres.env
    volumes:
      - dbdata:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - travel-guide

  app:
    build: .
    image: registry.citronium.com/travel-api:0.0.1
    container_name: travel-api
    ports:
      - 5000:5000
    depends_on:
      - postgres
    env_file:
      - app.env
    environment:
      NODE_ENV: staging
    labels:
      - traefik.backend=travel-api
      - traefik.frontend.rule=Host:travel-api.psrv5.citronium.com
      - traefik.port=5000
      - traefik.docker.network=traefik_proxy
    volumes:
      - static:/home/node/app/static
    networks:
      - travel-guide
      - traefik

  content:
    image: nginx
    restart: always
    volumes:
      - static:/usr/share/nginx/html/static:ro
    labels:
      - traefik.backend=travel-static
      - traefik.frontend.rule=Host:travel-static.psrv5.citronium.com
      - traefik.port=80
      - traefik.docker.network=traefik_proxy
    networks:
      - travel-guide
      - traefik

networks:
  travel-guide:
    driver: bridge
  traefik:
    external:
      name: traefik_proxy

volumes:
  static:
  dbdata:
